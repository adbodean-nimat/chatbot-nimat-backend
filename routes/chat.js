// routes/chat.js
const express = require('express');
const router = express.Router();
const OpenAI = require('openai');
const fs = require('fs');
const path = require('path');

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

// Cache de datos
let catalogoCache = null;
let datosEmpresaCache = null;

// ============================================
// FUNCIONES DE CARGA DE DATOS
// ============================================

function cargarCatalogo() {
  if (!catalogoCache) {
    const rutaJson = path.join(__dirname, '../data/productos.json');
    const data = fs.readFileSync(rutaJson, 'utf8');
    catalogoCache = JSON.parse(data);
  }
  return catalogoCache;
}

function cargarDatosEmpresa() {
  if (!datosEmpresaCache) {
    const rutaJson = path.join(__dirname, '../data/datos.json');
    const data = fs.readFileSync(rutaJson, 'utf8');
    datosEmpresaCache = JSON.parse(data);
  }
  return datosEmpresaCache;
}

// Recargar cat√°logo cada hora
setInterval(() => {
  catalogoCache = null;
  datosEmpresaCache = null;
  console.log('üîÑ Recargando cat√°logo y datos de empresa...');
}, 3600000);

// ============================================
// B√öSQUEDA DE PRODUCTOS
// ============================================

function buscarProductos(consulta) {
  const catalogo = cargarCatalogo();
  const consultaLower = consulta.toLowerCase();
  const palabras = consultaLower.split(/\s+/).filter(p => p.length > 2);
  
  let productosIds = new Set();
  
  // Buscar en √≠ndices r√°pidos
  if (catalogo.indices) {
    // Buscar por categor√≠a
    for (const [categoria, ids] of Object.entries(catalogo.indices.por_categoria || {})) {
      if (palabras.some(p => categoria.toLowerCase().includes(p))) {
        ids.forEach(id => productosIds.add(id));
      }
    }
    
    // Buscar por marca
    for (const [marca, ids] of Object.entries(catalogo.indices.por_marca || {})) {
      if (palabras.some(p => marca.toLowerCase().includes(p))) {
        ids.forEach(id => productosIds.add(id));
      }
    }
  }
  
  // Si no encontr√≥ nada en √≠ndices, buscar en todos los productos
  if (productosIds.size === 0) {
    catalogo.productos.forEach((prod, idx) => {
      const score = calcularScore(prod, palabras);
      if (score > 0) {
        productosIds.add(idx);
      }
    });
  }
  
  // Obtener productos y ordenar por relevancia
  const productos = Array.from(productosIds)
    .map(id => catalogo.productos[id])
    .filter(p => p)
    .map(p => ({
      ...p,
      score: calcularScore(p, palabras)
    }))
    .sort((a, b) => b.score - a.score)
    .slice(0, 10); // Top 10
  
  return productos;
}

function calcularScore(producto, palabras) {
  let score = 0;
  
  palabras.forEach(palabra => {
    // Nombre (peso 3)
    if (producto.nombre.toLowerCase().includes(palabra)) score += 3;
    
    // Keywords (peso 2)
    if (producto.keywords && producto.keywords.some(k => k.includes(palabra))) score += 2;
    
    // Categor√≠a (peso 2)
    if (producto.categoria_principal && producto.categoria_principal.toLowerCase().includes(palabra)) score += 2;
    
    // Material (peso 1)
    if (producto.material && producto.material.toLowerCase().includes(palabra)) score += 1;
    
    // Marca (peso 1)
    if (producto.marca && producto.marca.toLowerCase().includes(palabra)) score += 1;
  });
  
  // Bonus por stock disponible
  if (producto.stock > 0) score += 1;
  
  return score;
}

// ============================================
// RESPUESTAS AUTOM√ÅTICAS
// ============================================

function generarRespuestaAutomatica(mensaje) {
  const msgLower = mensaje.toLowerCase();
  const datosEmpresa = cargarDatosEmpresa();
  
  // Horarios
  if (msgLower.includes('horario') || msgLower.includes('hora') || msgLower.includes('abierto')) {
    return {
      automatica: true,
      respuesta: `üìÖ Nuestros horarios de atenci√≥n son:\n\n${datosEmpresa.horarios.descripcion}\n\n¬øEn qu√© m√°s puedo ayudarte?`
    };
  }
  
  // Ubicaci√≥n
  if (msgLower.includes('ubicacion') || msgLower.includes('ubicaci√≥n') || msgLower.includes('direcci√≥n') || msgLower.includes('direccion') || msgLower.includes('donde')) {
    return {
      automatica: true,
      respuesta: `üìç Nos encontramos en:\n${datosEmpresa.ubicacion.direccion.completa}\n\nüó∫Ô∏è Ver en Google Maps: ${datosEmpresa.ubicacion.google_maps.link}\n\n¬øNecesit√°s algo m√°s?`
    };
  }
  
  // Contacto
  if (msgLower.includes('telefono') || msgLower.includes('tel√©fono') || msgLower.includes('contacto') || msgLower.includes('llamar')) {
    return {
      automatica: true,
      respuesta: `üìû Pod√©s contactarnos por:\n\n‚Ä¢ WhatsApp: ${datosEmpresa.contacto.whatsapp.numero}\n‚Ä¢ Tel√©fono: ${datosEmpresa.contacto.telefono.formateado}\n‚Ä¢ Email: ${datosEmpresa.contacto.email.ventas}\n\n¬øEn qu√© puedo ayudarte?`
    };
  }
  
  // Formas de pago
  if (msgLower.includes('pago') || msgLower.includes('tarjeta') || msgLower.includes('efectivo') || msgLower.includes('transferencia')) {
    return {
      automatica: true,
      respuesta: `üí≥ Aceptamos:\n${datosEmpresa.metodos_pago.descripcion}\n\n¬øQuer√©s consultar alg√∫n producto?`
    };
  }
  
  // Env√≠os
  if (msgLower.includes('envio') || msgLower.includes('env√≠o') || msgLower.includes('delivery') || msgLower.includes('entregan') || msgLower.includes('entrega')) {
    return {
      automatica: true,
      respuesta: `üöö Realizamos env√≠os en ${datosEmpresa.envios.zona_cobertura}\n‚úì Retiro gratuito en sucursal\n\n¬øNecesit√°s cotizar un env√≠o espec√≠fico?`
    };
  }

  // Historia de la Empresa
  if (msgLower.includes('historia')) {
    return {
      automatica: true,
      respuesta: `${datosEmpresa.empresa.historia}`
    };
  }
  
  return null;
}

// ============================================
// GENERACI√ìN DE RESPUESTA CON IA
// ============================================

async function generarRespuestaIA(mensaje, productos, historial) {
  const datosEmpresa = cargarDatosEmpresa();
  
  // System prompt con informaci√≥n de la empresa
  const systemPrompt = `Sos el asistente virtual de ${datosEmpresa.empresa.nombre_completo}.

INFORMACI√ìN DE LA EMPRESA:
üìç Ubicaci√≥n: ${datosEmpresa.ubicacion.direccion.completa}
üìû Tel√©fono: ${datosEmpresa.contacto.telefono.formateado}
üì± WhatsApp: ${datosEmpresa.contacto.whatsapp.numero}
üìß Email: ${datosEmpresa.contacto.email.ventas}
üïê Horarios: ${datosEmpresa.horarios.descripcion}

M√âTODOS DE PAGO:
${datosEmpresa.metodos_pago.descripcion}

ENV√çOS:
${datosEmpresa.envios.disponible ? `Realizamos env√≠os en ${datosEmpresa.envios.zona_cobertura}` : 'Retiro en sucursal'}
${datosEmpresa.envios.retiro_sucursal.disponible ? '‚úì Retiro gratuito en sucursal' : ''}

ESPECIALIDADES:
${datosEmpresa.informacion_adicional.especialidades.join(', ')}

HISTORIA DE LA EMPRESA
Las empresas en general, y a√∫n m√°s las familiares, dependen en su trayectoria del componente humano de las mismas. As√≠ como el ser humano nace, crece, prospera y muere, las empresas tambi√©n est√°n, como humanas que son, sujetas a las contingencias de nacimiento, desarrollo, prosperidad y declinaci√≥n que las lleva a su prescripci√≥n final. 
As√≠ fue que la firma ANDR√âS ECHEVESTE, fundada por el a√±o 1923 y que ocup√≥ un sector muy importante de los corralones de materiales de construcci√≥n, durante 50 a√±os desde su sede de la calle Entre R√≠os 253, se extingui√≥ a fines de 1973.
Los acontecimientos se desarrollaron de tal manera en aquel a√±o que el Sr. Enrique Joaqu√≠n Niez, que perteneci√≥ a ANDR√âS ECHEVESTE por m√°s de 20 a√±os, se hizo cargo del fondo de comercio de la misma, iniciando de esta forma su vida comercial como NIMAT, el 01 de enero de 1974. 
En la apertura, su nueva empresa funcion√≥ en el local de su antecesora, de la calle Entre R√≠os. M√°s adelante, en 1982, ya acompa√±ado por sus hijos, adquiri√≥ la propiedad sita en calle Monse√±or Tavella y Dr. Ald√°. Desde entonces y hasta 1992 despleg√≥ toda su actividad desde estas dos direcciones. En 1993, para adaptarse a las circunstancias de entonces, cerr√≥ el viejo local de la calle Entre R√≠os y concentr√≥ toda la actividad en el local de la calle Monse√±or Tavella. 
Pero la tenacidad y el esfuerzo de los integrantes de NIMAT para conformar una empresa siempre joven, focalizada en lograr la satisfacci√≥n de los clientes, adaptable a los cambios de los tiempos, acompa√±ados por la lealtad y capacidad de su personal, han hecho que hoy esta empresa ocupe una franja muy importante en la provisi√≥n de materiales de construcci√≥n en la ciudad de Concordia y regi√≥n de influencia.

Nimat y la IA:
Nimat se encuentra investigando en la optimizaci√≥n de sus procesos internos y utiliza como herramienta la IA.
Consultas, solicitud de pedidos y atenci√≥n al cliente:
- Tel√©fono: (0345) 427-3333
- WhatsApp: +54 9 345 417 8310 / +54 9 345 403 7669 

En los siguientes horarios:
- Lunes a Viernes: 07.30 a 19.00hs.
- S√°bados: 08 a 12.30 hs.

Tambi√©n puedes enviarnos un e-mail a info@nimat.com.ar

√≥ seguinos en nuestras redes: Facebook & Instagram

Contamos con un Outlet en nuestra tienda https://www.nimat.com.ar/outlet

Contamos con Estacionamiento propio.
`;

  // Contexto de productos
  const contextoProductos = productos.length > 0
    ? `PRODUCTOS DISPONIBLES (recomend√° alguno de estos):\n\n${productos.map(p => 
        `- ${p.nombre}
  SKU: ${p.sku}
  PRECIO: $${p.precio.toLocaleString('es-AR')}
  STOCK: ${p.stock} unidades disponibles
  ${p.material ? `Material: ${p.material}` : ''}
  ${p.medidas ? `Medidas: ${p.medidas}` : ''}`
      ).join('\n\n')}`
    : 'No se encontraron productos exactos para esta consulta. Ofrec√© consultar por WhatsApp o buscar alternativas.';
  
  // Construir mensajes para OpenAI
  const mensajes = [
    { role: 'system', content: systemPrompt },
    { role: 'system', content: contextoProductos },
    ...historial,
    { role: 'user', content: mensaje }
  ];
  
  try {
    const completion = await openai.chat.completions.create({
      model: 'gpt-4o-mini',
      messages: mensajes,
      temperature: 0.7,
      max_tokens: 500
    });
    
    return completion.choices[0].message.content;
    
  } catch (error) {
    console.error('Error OpenAI:', error);
    throw new Error('Error al generar respuesta');
  }
}

// ============================================
// ENDPOINTS
// ============================================

// Endpoint principal del chat
router.post('/chat', async (req, res) => {
  try {
    const { mensaje, historial = [] } = req.body;
    
    if (!mensaje) {
      return res.status(400).json({ error: 'Mensaje requerido' });
    }
    
    console.log('üì® Mensaje recibido:', mensaje);
    
    // 1. Verificar si hay respuesta autom√°tica
    const respuestaAuto = generarRespuestaAutomatica(mensaje);
    if (respuestaAuto) {
      console.log('‚ö° Respuesta autom√°tica generada');
      return res.json({
        respuesta: respuestaAuto.respuesta,
        productos: [],
        timestamp: new Date().toISOString()
      });
    }
    
    // 2. Buscar productos relevantes
    const productosRelevantes = buscarProductos(mensaje);
    console.log(`üîç Productos encontrados: ${productosRelevantes.length}`);
    
    // 3. Generar respuesta con IA
    const respuesta = await generarRespuestaIA(
      mensaje,
      productosRelevantes,
      historial
    );
    
    res.json({
      respuesta: respuesta,
      // productos: productosRelevantes.slice(0, 3), // Top 3 para mostrar
      timestamp: new Date().toISOString()
    });
    
  } catch (error) {
    console.error('‚ùå Error:', error);
    res.status(500).json({
      error: 'Error al procesar mensaje',
      detalles: error.message
    });
  }
});

// Endpoint para obtener cat√°logo completo (para presupuestos)
router.get('/productos', (req, res) => {
  try {
    const catalogo = cargarCatalogo();
    
    res.json({
      metadata: catalogo.metadata,
      indices: catalogo.indices,
      productos: catalogo.productos.filter(p => p.activo && p.visible)
    });
    
  } catch (error) {
    console.error('Error al cargar cat√°logo:', error);
    res.status(500).json({
      error: 'Error al cargar productos',
      productos: []
    });
  }
});

module.exports = router;